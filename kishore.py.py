# -*- coding: utf-8 -*-
"""kesavan.github

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kmo3X3ZwTwK_f2oQkdKFA5x4cd9SJa_t
"""

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np
from sklearn.metrics import confusion_matrix, classification_report, precision_recall_fscore_support
from wordcloud import WordCloud

# Dummy data (replace with actual data)
true_intents = ['Track Order', 'Refund Request', 'Cancel Order', 'Track Order', 'Cancel Order']
predicted_intents = ['Track Order', 'Cancel Order', 'Cancel Order', 'Track Order', 'Refund Request']
intent_labels = list(set(true_intents + predicted_intents))

# -------- 1. Confusion Matrix for Intent Classification --------
cm = confusion_matrix(true_intents, predicted_intents, labels=intent_labels)
plt.figure(figsize=(8, 6))
sns.heatmap(cm, annot=True, fmt='d', xticklabels=intent_labels, yticklabels=intent_labels, cmap='Blues')
plt.xlabel("Predicted Intent")
plt.ylabel("True Intent")
plt.title("Confusion Matrix - Intent Classification")
plt.show()

# -------- 1b. Bar Chart of Intent Distribution --------
# Sample training intent distribution
intent_counts = {'Track Order': 150, 'Refund Request': 50, 'Cancel Order': 45, 'Product Info': 30}
intent_df = pd.DataFrame.from_dict(intent_counts, orient='index', columns=['Count'])

intent_df.sort_values('Count', ascending=False).plot(kind='bar', legend=False, color='skyblue')
plt.title("Intent Distribution in Training Data")
plt.ylabel("Frequency")
plt.xlabel("Intent")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# -------- 2. Entity-wise Precision/Recall --------
# Replace with actual precision and recall per entity
entity_data = {
    'Entity': ['Order ID', 'Date', 'Name', 'Product Description'],
    'Precision': [0.95, 0.91, 0.89, 0.75],
    'Recall': [0.94, 0.88, 0.87, 0.70]
}
entity_df = pd.DataFrame(entity_data)

# Plot Precision and Recall for each entity
entity_df.set_index('Entity')[['Precision', 'Recall']].plot(kind='barh', figsize=(8, 5), color=['green', 'orange'])
plt.title("Entity Recognition Performance")
plt.xlabel("Score")
plt.xlim(0, 1.0)
plt.tight_layout()
plt.show()

# -------- 3. Word Cloud of Common Queries --------
sample_queries = [
    "Where is my order?", "I want a refund", "Order delayed", "How to cancel an order?",
    "Track my shipment", "Request a refund", "Late delivery", "Product not received",
    "Cancel the order", "Order status", "Need a refund"
]
text_data = " ".join(sample_queries)
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text_data)

plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title("Word Cloud of Common User Queries")
plt.show()